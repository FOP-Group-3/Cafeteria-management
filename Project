#include<iostream>
#include<string.h>
#include <cstdlib>
#include <iomanip>
#include<vector>
#include<conio.h>
#include<bits/stdc++.h>//for find() function
using namespace std;
struct a{char soft_drinks;
        char malt;
        char hot_drinks;};
    struct menu{
        vector <float> price {6.95,5.75,7.25,8.95,4.95};
        vector <string> foods {"BuffaloWings", "HamBurger", "ItalianSandwich", "ShrimpNuggets", "VeggieSupreme"};
        a drinks;}foodMenu;
        struct drink{
         vector <float> money {3.45,6.00,40.25,8.95,4.75};
        vector <string> drinks {"1L bottle water", "tea", "hot chocolate", "soft drinks", "coffee"};
        }drinkMenu;
void choose();
void addItems();
void showMenu();
void showUserOption();
void deleteItemOption();
void deleteOneItem();
void modifyItem();
void searchItem();
void sortItems();
int main(){
    showMenu();
    showUserOption();
 return 0;
}
void showUserOption(){
int userOption;
  cout<<"What do you want to do? \nPress:"
      <<"\n1: To add items to the menu\n2: "<<
      "To order items\n3: To delete item(s) \n4: "<<
        "To modify/edit item(s) \n5: "<<
        "To search for item(s)\n6: To sort item(s)\n7: To exit\n";
  cin>>userOption;
  switch(userOption){
  case 1:
    addItems();
    break;
  case 2:
    choose();
    break;
  case 3:
    deleteItemOption();
    break;
  case 4:
    modifyItem();
  case 5:
    searchItem();
  case 6:
    sortItems();
  case 7:
    exit(1);
    break;
  default:
    cout<<"Invalid choice!";
    break;
      }
}
void showMenu(){
     cout<<endl;
     cout<<endl;
     cout<<"         :::::::::::::::::::MENU:::::::::::::::::::\n";
     for(int i=0;i<foodMenu.foods.size();i++){
     cout<<"\n       Item "<< i << " "<<foodMenu.foods[i]	<<"             "<<foodMenu.price[i]<<" <===\n"<<endl;
}
for(int j=0;j<drinkMenu.drinks.size();j++){
     cout<<"\n       press "<< j << " "<<drinkMenu.drinks[j]	<<"             "<<drinkMenu.money[j]<<" <===\n"<<endl;
}}
void addItems(){
    ADDITEMS:
    string foodItem,drinkItem;
    float itemPrice, drinkPrice;
    cout<<endl;
    cout<<":::::::::::::::::::ADD ITEMS:::::::::::::::::::\n";
    cout<<"Please Enter the name of the food item you want to insert:\n";
    cin>>foodItem;
    cout<<"Please Enter the name of the drink item you want to insert:\n";
    cin>>drinkItem;
    cout<<"Please enter the price for the food item: "<<foodItem<< "\n";
    cin>>itemPrice;
    foodMenu.foods.push_back(foodItem);
    foodMenu.price.push_back(itemPrice);
    cout<<"Successfully added one food item to the menu!\n";
    cout<<"Please enter the price for the drink item: "<<drinkItem<< "\n";
    cin>>drinkPrice;
    drinkMenu.drinks.push_back(drinkItem);
    drinkMenu.money.push_back(drinkPrice);
    cout<<"Successfully added your drink item to the menu!\n";
    char choice;
    cout<<"Do you want to add another item? y/n \n";
    cin>>choice;
    if(choice =='Y' || choice =='y'){       goto ADDITEMS;
    }
    else if(choice == 'N' || choice == 'n'){
        cout<<"Thank you, your items have been added.";
        system("CLS");
        showMenu();
        showUserOption();
        //choose();
    }
    else {
        cout<<"Invalid choice!";
}
}
void deleteItemOption(){
    int deleteOption;
    cout<<endl;
    cout<<"         :::::::::::::::::::DELETE ITEM(S):::::::::::::::::::\n";
    cout<<"Press: \n1: To delete one item\n2: To delete the entire items\n";
    cin>>deleteOption;
    switch(deleteOption){
case 1:
    deleteOneItem();

case 2:
    foodMenu.foods.clear();
    drinkMenu.drinks.clear();
    foodMenu.price.clear();
    drinkMenu.money.clear();
    system("CLS");
    showMenu();
    showUserOption();
    }
}
void deleteOneItem(){
    DELETEITEM:
    int index;
    char choice;
    vector <int>::iterator item1;
    //item = foodMenu.foods.begin();
    vector <int>::iterator item2;
    system("CLS");
    showMenu();
    cout<<"Enter the index of the item you want to delete:\n";
    cin>>index;
    auto elementToRemove = foodMenu.foods.begin() + index;
    auto itemsToRemove = drinkMenu.drinks.begin() + index;
    auto priceToRemove = foodMenu.price.begin() + index;
    auto moneyToRemove = drinkMenu.money.begin() + index;
    foodMenu.foods.erase(elementToRemove);
    foodMenu.price.erase(priceToRemove);
    drinkMenu.drinks.erase(itemsToRemove);
    drinkMenu.money.erase(moneyToRemove);
    cout<<"Successfully deleted one item!\n";
    cout<<"Do you want to delete another item? y/n\n";
    cin>>choice;
    if(choice =='Y' || choice =='y'){
        goto DELETEITEM;
    }
    else if(choice == 'N' || choice == 'n'){
        cout<<"Thank you, the item(s) have been deleted.";
        system("CLS");
        showMenu();
        showUserOption();
        //choose();
    }
    else {
        cout<<"Invalid choice!";
}
}
void modifyItem(){
    MODIFYITEMS:
    char choice;
    int index;
    string foodItem;
    string drinkItem;
    float price;
    float money;
    cout<<endl;
    cout<<"         :::::::::::::::::::MODIFY ITEM(S):::::::::::::::::::\n";

    cout<<"Please enter the index of the menu you want to edit:\n";
    cin>>index;
    cout<<"Please enter the new food name:\n";
    cin>>foodItem;
    cout<<"Please enter the price for the food: "<<foodItem<< ": \n";
    cin>>price;
    cout<<"Please enter the new drink name:\n";
    cin>>drinkItem;
    cout<<"Please enter the price for the drink: "<<drinkItem<< ": \n";
    cin>>money;
    foodMenu.foods.at(index) = foodItem;
    foodMenu.price.at(index) = price;
    drinkMenu.drinks.at(index) = drinkItem;
    drinkMenu.money.at(index) = money;
    cout<<"Successfully modified one item. Do you want to modify other items? y/n \n";
    cin>>choice;
    if(choice =='Y' || choice =='y'){
        system("CLS");
        showMenu();
        goto MODIFYITEMS;
    }
    else if(choice == 'N' || choice == 'n'){
        cout<<"Thank you, the item(s) have been modified.";
        system("CLS");
        showMenu();
        showUserOption();
    }
    else {
        cout<<"Invalid choice!";
    }
}
void searchItem(){
    string searchFood;
    string searchDrink;
    int indexOfFood;
    int indexOfDrink;
    //int index;
    SEARCHFORITEM:
    cout<<endl;
    cout<<"         :::::::::::::::::::SEARCH FOR ITEM(S):::::::::::::::::::\n";
    cout<<"Enter the food you want to search for: \n";
    cin>>searchFood;
    auto index = find(foodMenu.foods.begin(), foodMenu.foods.end(), searchFood);
    if(index != foodMenu.foods.end()){
        char choice;
        indexOfFood = index - foodMenu.foods.begin();
        cout<<"Element found at index: "<<indexOfFood<< " with price: "<< foodMenu.price.at(indexOfFood)<<endl;
        cout<<"Enter the drink you want to search for: \n";
    cin>>searchDrink;
    auto index = find(drinkMenu.drinks.begin(), drinkMenu.drinks.end(), searchDrink);
    if(index != drinkMenu.drinks.end()){
        char choice;
        indexOfDrink = index - drinkMenu.drinks.begin();
        cout<<"Element found at index: "<<indexOfDrink<< " with price: "<< drinkMenu.money.at(indexOfDrink)<<endl;
        cout<<"Do you want to search for another item? y/n\n";
        cin>>choice;

        if(choice =='Y' || choice =='y'){
            system("CLS");
            showMenu();
            goto SEARCHFORITEM;
                }
        else if(choice == 'N' || choice == 'n'){
        cout<<"Thank you!";
        system("CLS");
        showMenu();
        showUserOption();
                }
        else {
            cout<<"Invalid choice!";
            }
    }}
    else
    {
        cout<<"Element not found!\n";
        showMenu();
        showUserOption();

    }


}
void sortItems()
{
    int option;
    cout<<endl;
    cout<<"         :::::::::::::::::::SORT ITEM(S):::::::::::::::::::\n";
    cout<<"Press: \n\t1: To sort in ascending order\n\t2: To sort in descending order\n";
    cin>>option;
    if(option == 1)
    {
    sort(foodMenu.foods.begin(), foodMenu.foods.end());
    cout<<"Food menu successfully sorted in ascending order!";
    sort(drinkMenu.drinks.begin(), drinkMenu.drinks.end());
    cout<<"drink menu successfully sorted in ascending order!";
    showMenu();
    showUserOption();

    }
    else if(option == 2)
    {
    sort(foodMenu.foods.begin(), foodMenu.foods.end(), greater<string>());
    cout<<"Food menu successfully sorted in descending order!";
    sort(drinkMenu.drinks.begin(), drinkMenu.drinks.end(), greater<string>());
    cout<<"drink menu successfully sorted in descending order!";
    showMenu();
    showUserOption();
    }
    else
        cout<<"Invalid option!";
}
void choose(){
   menu food;
   menu drink;
   int order;
   int j;
   int foodAmount;
   int drinkAmount;
   float amountOfSaleFood;
   float amountOfSaleDrink;

   vector <string> listOfOrderedFood {};
   vector <float> listOfOrderedPrice {};
   vector <float> totalPrice {};
   vector <int> amountOfFood {};
   vector <string> listOfOrderedDrink {};
   vector <float> listOfOrderedMoney {};
   vector <float> totalMoney {};
   vector <int> amountOfDrink {};
   FOODCHOICE:
    char choice;
    cout<<"\nFrom The List Of Food Items, What Would You Like?:\n";
    cin>>order;
    cout<<"\nHow Many "<< foodMenu.foods[order] <<" would You Like To Order:\n";
    cin>>foodAmount;
    amountOfSaleFood = foodAmount * foodMenu.price[order];
    amountOfFood.push_back(foodAmount);
    listOfOrderedPrice.push_back(foodMenu.price[order]);
    listOfOrderedFood.push_back(foodMenu.foods[order]);
    totalPrice.push_back(amountOfSaleFood);
    DRINKCHOICE:
    cout<<"\nFrom The List Of drink Items, What Would You Like?:\n";
    cin>>order;
    cout<<"\nHow Many "<< drinkMenu.drinks[order] <<" would You Like To Order:\n";
    cin>>drinkAmount;
    amountOfSaleDrink = drinkAmount * drinkMenu.money[order];
    amountOfDrink.push_back(drinkAmount);
    listOfOrderedMoney.push_back(drinkMenu.money[order]);
    listOfOrderedDrink.push_back(drinkMenu.drinks[order]);
    totalMoney.push_back(amountOfSaleDrink);
    cout<<"Do you want another order? y/n\n";
    cin>>choice;
    switch(choice){
    case 'y':
    case 'Y':
        goto FOODCHOICE;
        goto DRINKCHOICE;
        break;

    case 'N':
    case 'n':
        cout<<"Thanks for visiting!\n";
        system("CLS");
        break;
    default:
        cout<<"Invalid choice\n";
        break;
    }

cout<<"You Have Ordered:\n\n";
cout<<"===========================================================\n";
cout<<left<<setw(15)<<"ITEM"<<right<<setw(11)<<"QUANTITY"<<right<<setw(15)<<"UNIT PRICE"<<right<<setw(20)<<"AMOUNT OF SALE\n";
cout<<"===========================================================";
for(int i=0;i<listOfOrderedFood.size();i++){
cout<<"\n" << listOfOrderedFood.at(i) << ":\t"<<setw(6)<<left<< amountOfFood.at(i) <<setw(16)<<right<< listOfOrderedFood .at(i)  <<setw(20) <<right<< totalPrice.at(i)<<endl;
}
for(int j=0;j<listOfOrderedDrink.size();j++){
cout<<"\n" << listOfOrderedDrink.at(j) << ":\t"<<setw(6)<<left<< amountOfDrink.at(j) <<setw(16)<<right<< listOfOrderedMoney.at(j)  <<setw(20) <<right<< totalMoney.at(j)<<endl;
}
showMenu();
showUserOption();
}






